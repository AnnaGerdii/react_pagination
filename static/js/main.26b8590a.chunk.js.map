{"version":3,"sources":["Pagination.js","Content.js","App.js","index.js"],"names":["Pagination","_ref","total","perPage","selectedPage","handlePageChange","pageNumber","Math","ceil","firstItemShown","lastItemShown","react_default","a","createElement","Fragment","concat","className","type","disabled","onClick","Object","toConsumableArray","Array","keys","map","page","key","Content","contentToShow","content","filter","item","index","floor","App","state","goods","activePageIndex","itemsPerPage","onPageChange","_this","setState","_this$state","this","src_Pagination","length","src_Content","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"2MAwDeA,EArDI,SAAAC,GAAwD,IAArDC,EAAqDD,EAArDC,MAAOC,EAA8CF,EAA9CE,QAASC,EAAqCH,EAArCG,aAAcC,EAAuBJ,EAAvBI,iBAC5CC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAiBN,EAAUC,GAAgBD,EAAU,GACrDO,EAAgBP,EAAUC,EAAeF,EAC3CA,EACAC,EAAUC,EAEd,OACEO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,aAAAE,OAAQN,EAAR,QAAAM,OAA6BL,EAA7B,QAAAK,OAAiDb,EAAjD,MACAS,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cACZL,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLD,UAAU,mCACVE,SAA2B,IAAjBd,EACVe,QAAS,kBAAMd,EAAiBD,EAAe,KAJjD,YAQCgB,OAAAC,EAAA,EAAAD,CAAIE,MAAMhB,GAAYiB,QAAQC,IAAI,SAAAC,GAAI,OACrCd,EAAAC,EAAAC,cAAA,MAAIa,IAAKD,GACPd,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLE,QAAS,kBAAMd,EAAiBoB,EAAO,IACvCT,UACES,IAASrB,EAAe,EACpB,uBACA,UAELqB,EAAO,MAIdd,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLD,UAAU,uBACVG,QAAS,kBAAMd,EAAiBD,EAAe,IAC/Cc,SAAUd,IAAiBE,GAJ7B,WCbOqB,EApBC,SAAA1B,GAAwC,IAArCG,EAAqCH,EAArCG,aAAcD,EAAuBF,EAAvBE,QACzByB,EADgD3B,EAAd4B,QACVC,OAAO,SAACC,EAAMC,GAAP,OACnCzB,KAAK0B,MAAMD,EAAQ7B,GAAW,IAAMC,IAGtC,OACEO,EAAAC,EAAAC,cAAA,MAAIG,UAAU,WACXY,EAAcJ,IAAI,SAAAO,GAAI,OACrBpB,EAAAC,EAAAC,cAAA,MAAIa,IAAKK,GAAOA,OCkDTG,6MAvDbC,MAAQ,CACNC,MAAO,CACL,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,SACA,SACA,SACA,WACA,OACA,SACA,UACA,UACA,WACA,QACA,WACA,UAGFC,gBAAiB,EACjBC,aAAc,KAGhBC,aAAe,SAACP,GACdQ,EAAKC,SAAS,CAAEJ,gBAAiBL,6EAG1B,IAAAU,EAC0CC,KAAKR,MAA9CC,EADDM,EACCN,MAAOC,EADRK,EACQL,gBAAiBC,EADzBI,EACyBJ,aAEhC,OACE3B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAC+B,EAAD,CACExC,aAAciC,EACdhC,iBAAkBsC,KAAKJ,aACvBrC,MAAOkC,EAAMS,OACb1C,QAASmC,IAEX3B,EAAAC,EAAAC,cAACiC,EAAD,CACE1C,aAAciC,EACdR,QAASO,EACTjC,QAASmC,YAjDDS,IAAMC,WCDxBC,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.26b8590a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ total, perPage, selectedPage, handlePageChange }) => {\n  const pageNumber = Math.ceil(total / perPage);\n  const firstItemShown = perPage * selectedPage - (perPage - 1);\n  const lastItemShown = perPage * selectedPage > total\n    ? total\n    : perPage * selectedPage;\n\n  return (\n    <>\n      <p>{`(${firstItemShown} to ${lastItemShown} of ${total})`}</p>\n      <ul className=\"pagination\">\n        <button\n          type=\"button\"\n          className=\"button button_switch button_prev\"\n          disabled={selectedPage === 1}\n          onClick={() => handlePageChange(selectedPage - 1)}\n        >\n          Previous\n        </button>\n        {[...Array(pageNumber).keys()].map(page => (\n          <li key={page}>\n            <button\n              type=\"button\"\n              onClick={() => handlePageChange(page + 1)}\n              className={\n                page === selectedPage - 1\n                  ? 'button button_active'\n                  : 'button'}\n            >\n              {page + 1}\n            </button>\n          </li>\n        ))}\n        <button\n          type=\"button\"\n          className=\"button button_switch\"\n          onClick={() => handlePageChange(selectedPage + 1)}\n          disabled={selectedPage === pageNumber}\n        >\n          Next\n        </button>\n      </ul>\n    </>\n  );\n};\n\nPagination.propTypes = {\n  selectedPage: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  handlePageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Content = ({ selectedPage, perPage, content }) => {\n  const contentToShow = content.filter((item, index) => (\n    Math.floor(index / perPage) + 1 === selectedPage\n  ));\n\n  return (\n    <ol className=\"content\">\n      {contentToShow.map(item => (\n        <li key={item}>{item}</li>\n      ))}\n    </ol>\n  );\n};\n\nContent.propTypes = {\n  selectedPage: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  content: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default Content;\n","import React from 'react';\nimport './App.scss';\nimport Pagination from './Pagination';\nimport Content from './Content';\n\nclass App extends React.Component {\n  state = {\n    goods: [\n      'Dumplings',\n      'Carrot',\n      'Eggs',\n      'Ice cream',\n      'Apple',\n      'Bread',\n      'Fish',\n      'Honey',\n      'Jam',\n      'Garlic',\n      'Butter',\n      'Apples',\n      'Cherries',\n      'Cake',\n      'Sweets',\n      'Chicken',\n      'Oatmeal',\n      'Tomatoes',\n      'Pizza',\n      'Pancakes',\n      'Coffee',\n    ],\n\n    activePageIndex: 1,\n    itemsPerPage: 5,\n  };\n\n  onPageChange = (index) => {\n    this.setState({ activePageIndex: index });\n  };\n\n  render() {\n    const { goods, activePageIndex, itemsPerPage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Tabs</h1>\n        <Pagination\n          selectedPage={activePageIndex}\n          handlePageChange={this.onPageChange}\n          total={goods.length}\n          perPage={itemsPerPage}\n        />\n        <Content\n          selectedPage={activePageIndex}\n          content={goods}\n          perPage={itemsPerPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}